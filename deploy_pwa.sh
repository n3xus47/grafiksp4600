#!/bin/bash

# Skrypt wdra≈ºania PWA na serwer DigitalOcean
# U≈ºycie: ./deploy_pwa.sh

echo "üöÄ Wdra≈ºanie PWA na serwer produkcyjny..."

# Kolory dla lepszej czytelno≈õci
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

SERVER_IP="46.101.144.141"
DOMAIN="grafik4600.com"
SERVER_USER="root"  # Zmie≈Ñ na w≈Ça≈õciwego u≈ºytkownika
APP_PATH="/var/www/grafiksp4600"  # Zmie≈Ñ na w≈Ça≈õciwƒÖ ≈õcie≈ºkƒô

echo -e "${BLUE}üìã Sprawdzanie po≈ÇƒÖczenia z serwerem...${NC}"
if ! ping -c 1 $SERVER_IP &> /dev/null; then
    echo -e "${RED}‚ùå Nie mo≈ºna po≈ÇƒÖczyƒá siƒô z serwerem $SERVER_IP${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Serwer odpowiada${NC}"

echo -e "${BLUE}üì¶ Przygotowywanie plik√≥w do wdro≈ºenia...${NC}"

# Utw√≥rz tymczasowy folder z plikami do wdro≈ºenia
TEMP_DIR="/tmp/pwa_deploy_$(date +%s)"
mkdir -p $TEMP_DIR

# Skopiuj pliki PWA
cp -r static/icons $TEMP_DIR/
cp static/manifest.json $TEMP_DIR/
cp static/sw.js $TEMP_DIR/
cp static/favicon.ico $TEMP_DIR/
cp templates/offline.html $TEMP_DIR/
cp PWA_GUIDE.md $TEMP_DIR/

echo -e "${BLUE}üì§ Przygotowywanie skryptu wdro≈ºeniowego...${NC}"

# Utw√≥rz skrypt wdro≈ºeniowy dla serwera
cat > $TEMP_DIR/deploy_on_server.sh << 'EOF'
#!/bin/bash

echo "üîß Wdra≈ºanie PWA na serwerze..."

APP_PATH="/var/www/grafiksp4600"
BACKUP_PATH="/var/www/grafiksp4600_backup_$(date +%Y%m%d_%H%M%S)"

# Sprawd≈∫ czy aplikacja istnieje
if [ ! -d "$APP_PATH" ]; then
    echo "‚ùå Nie znaleziono aplikacji w $APP_PATH"
    echo "üìç Sprawd≈∫ lokalizacjƒô aplikacji na serwerze"
    exit 1
fi

# Utw√≥rz backup
echo "üíæ Tworzenie backupu..."
cp -r $APP_PATH $BACKUP_PATH

# Wdra≈ºanie plik√≥w PWA
echo "üì± Kopiowanie plik√≥w PWA..."
cp -r icons $APP_PATH/static/ 2>/dev/null || echo "‚ö†Ô∏è  Folder icons ju≈º istnieje"
cp manifest.json $APP_PATH/static/
cp sw.js $APP_PATH/static/
cp favicon.ico $APP_PATH/static/
cp offline.html $APP_PATH/templates/

# Sprawd≈∫ czy nginx jest zainstalowany
if command -v nginx &> /dev/null; then
    echo "üåê Aktualizacja konfiguracji Nginx..."
    
    # Backup konfiguracji nginx
    cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup.$(date +%Y%m%d_%H%M%S)
    
    # Dodaj konfiguracjƒô PWA do nginx
    cat >> /etc/nginx/sites-available/default << 'NGINX_EOF'

# PWA Configuration
location /sw.js {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
}

location /manifest.json {
    add_header Cache-Control "max-age=3600";
    add_header Content-Type "application/json";
}

location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
}
NGINX_EOF

    echo "üîÑ Restartowanie Nginx..."
    nginx -t && systemctl reload nginx
else
    echo "‚ö†Ô∏è  Nginx nie znaleziony - pomi≈Ñ konfiguracjƒô"
fi

# Sprawd≈∫ czy aplikacja u≈ºywa systemd
if systemctl list-units --full -all | grep -q "grafiksp4600"; then
    echo "üîÑ Restartowanie aplikacji..."
    systemctl restart grafiksp4600
fi

# Sprawd≈∫ czy aplikacja u≈ºywa gunicorn
if pgrep -f "gunicorn.*grafiksp4600" > /dev/null; then
    echo "üîÑ Restartowanie Gunicorn..."
    pkill -f "gunicorn.*grafiksp4600"
    sleep 2
    # Aplikacja powinna siƒô automatycznie restartowaƒá przez systemd
fi

echo "‚úÖ Wdro≈ºenie PWA zako≈Ñczone!"
echo "üìç Backup utworzony w: $BACKUP_PATH"

# Sprawd≈∫ HTTPS
echo "üîí Sprawdzanie HTTPS..."
if curl -k -s https://grafik4600.com >/dev/null 2>&1; then
    echo "‚úÖ HTTPS dzia≈Ça na grafik4600.com"
    echo "üåê Sprawd≈∫ PWA: https://grafik4600.com"
    echo "üì± Otw√≥rz w Chrome/Safari i sprawd≈∫ przycisk instalacji"
else
    echo "‚ùå HTTPS nie dzia≈Ça - PWA wymaga HTTPS w produkcji!"
    echo "üîß Sprawd≈∫ konfiguracjƒô SSL dla grafik4600.com"
fi

EOF

chmod +x $TEMP_DIR/deploy_on_server.sh

echo -e "${YELLOW}üìã Instrukcje wdro≈ºenia:${NC}"
echo -e "${BLUE}1.${NC} Skopiuj pliki na serwer:"
echo "   scp -r $TEMP_DIR/* $SERVER_USER@$SERVER_IP:/tmp/"
echo ""
echo -e "${BLUE}2.${NC} Zaloguj siƒô na serwer:"
echo "   ssh $SERVER_USER@$SERVER_IP"
echo ""
echo -e "${BLUE}3.${NC} Uruchom wdro≈ºenie:"
echo "   cd /tmp && chmod +x deploy_on_server.sh && ./deploy_on_server.sh"
echo ""
echo -e "${BLUE}4.${NC} Sprawd≈∫ czy PWA dzia≈Ça:"
echo "   - Otw√≥rz aplikacjƒô w Chrome/Safari"
echo "   - Sprawd≈∫ DevTools ‚Üí Application ‚Üí Manifest"
echo "   - Sprawd≈∫ czy pojawia siƒô przycisk instalacji"
echo ""

echo -e "${RED}‚ö†Ô∏è  WA≈ªNE:${NC}"
echo -e "${YELLOW}‚Ä¢ PWA wymaga HTTPS w produkcji!${NC}"
echo -e "${YELLOW}‚Ä¢ Skonfiguruj SSL certyfikat (np. Let's Encrypt)${NC}"
echo -e "${YELLOW}‚Ä¢ Sprawd≈∫ czy wszystkie pliki PWA zosta≈Çy skopiowane${NC}"

echo ""
echo -e "${GREEN}üìÇ Pliki przygotowane w: $TEMP_DIR${NC}"
echo -e "${GREEN}üöÄ Gotowe do wdro≈ºenia!${NC}"
